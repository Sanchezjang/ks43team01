<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ks43team01.mapper.ReviewMapper">
	<resultMap type="ReviewContentsReg" id="ReviewContentsRegResultMap">
		    <id 	column="review_code"	 				property="reviewCode"/>
			<result column="goods_basic_info_code" 			property="goodsBasicInfoCode"/>
			<result column="user_id_code" 					property="userIdCode"/>
			<result column="review_score_standard_code" 	property="reviewScoreStandardCode"/>
			<result column="review_content"				    property="reviewContent"/>
			<result column="review_recommendations_count" 	property="reviewRecommendationsCount"/>
			<result column="review_decommendations_count" 	property="reviewDecommendationsCount"/>
			<result column="review_reg_date" 				property="reviewRegDate"/>
			<result column="review_reg_buyer_exp" 			property="reviewRegBuyerExp"/>
			<result column="review_reg_ip" 					property="reviewRegIp"/>
			<result column="review_star_score" 				property="reviewStarScore"/>
			
		<association property="goods" javaType="Goods">
			<id 	column="goods_code"							property="goodsCode"/>
			<result column="goods_sub_category_code" 			property="goodsSubCategoryCode"/>
			<result column="goods_name" 						property="goodsName"/>
			<result column="goods_description" 					property="goodsDescription"/>
			<result column="goods_price" 						property="goodsPrice"/>
			<result column="goods_working_period" 				property="goodsWorkingPeriod"/>
			<result column="goods_modified_possibility_count"	property="goodsModifiedPossibilityCount"/>
			<result column="goods_pre_requests_answer_type" 	property="goodsPreRequestsAnswerType"/>
			<result column="goods_pre_request" 					property="goodsPreRequest"/>
			<result column="user_id_code" 						property="userIdCode"/>
			<result column="goods_reg_date" 					property="goodsRegDate"/>
		</association>
		
		<association property="scoreByReview" javaType="ReviewByScore">
			<id 	column="review_score_standard_code"	 	property="reviewScoreStandardCode"/>
			<result column="review_star_score" 				property="reviewStarScore"/>
			<result column="review_score_standard_details" 	property="reviewScoreStandardDetails"/>
		</association>
		
		<association property="user" javaType="User">
			<id column="user_id_code" 						property="userIdCode"/>
	  		<result column="user_pw" 						property="userPw"/>
	  		<result column="user_name"						property="userName"/>
	  		<result column="user_contact" 					property="userContact"/>
	  		<result column="user_email" 					property="userEmail"/>
	  		<result column="user_withdraw_status" 			property="userStatus"/>
	  		<result column="user_activity_area" 			property="userArea"/>
	  		<result column="user_retention_Points" 			property="userPoint"/>
	  		<result column="user_rating"					property="userRating"/>
	  		<result column="user_reg_date" 					property="userRreDate"/>
	  		<result column="user_update_date"			    property="userUpDate"/>
	  		<result column="level_num_code" 				property="userLevel"/>
		</association>
		<association property="point" javaType="Point">
			<id 	column="point_details_code"	 					property="pointDetailsCode"/>
			<result column="user_id_code" 							property="userIdCode"/>
			<result column="point_standard_details_code" 			property="pointStandardDetailsCode"/>
			<result column="point_amount"				   		 	property="pointAmount"/>
			<result column="user_email" 							property="userEmail"/>
			<result column="point_history_reg_date" 				property="pointHistoryRegDate"/>
		</association>
		
		<collection property="file" ofType="File">
			<id    column="file_code"						property="fileCode"/>
			<result column="user_id_code"					property="userIdCode"/>
			<result column="file_orginal_name"				property="fileOriginalName"/>
			<result column="file_re_name"					property="fileReName"/>
			<result column="file_main_image"				property="fileMainImage"/>
			<result column="file_location"					property="fileLocation"/>
			<result column="file_size"						property="fileSize"/>
			<result column="file_reg_date"					property="fileRegDate"/>
			<result column="file_update_date"				property="fileUpdateDate"/>
			<result column="file_use"						property="fileUse"/>	
		</collection>
	</resultMap>
	
	<select id="getReviewByCode" parameterType="String" resultMap="ReviewContentsRegResultMap">
	/* 리뷰 상세페이지 조회 */
		SELECT
		    rr.review_code							
		   ,rr.review_reg_date						
		   ,rr.user_id_code						
		   ,rr.review_content						
		   ,rr.review_recommendations_count			
		   ,rr.review_decommendations_count			
		   ,rr.review_star_score 					
		FROM 
			tb_r_review_contents AS rr 
		WHERE
			rr.review_code = #{reviewCode};
	</select>
	
	
	<select id="getReviewAdminList" resultType="Map">
	/* 관리자페이지 회원 리뷰 목록 */
		SELECT
			 tr.review_code							AS reviewCode
			,tr.review_reg_date                   	AS reviewRegDate    			
			,tr.review_content						AS reviewContent
			,rb.review_star_score					AS reviewStarScore			
			,tr.review_recommendations_count		AS reviewRecommendationsCount		
			,tr.review_decommendations_count		AS reviewDecommendationsCount		
		FROM 
			tb_r_review_contents AS tr 
			INNER join
			tb_g_goods AS gg
			on
			tr.goods_code = gg.goods_code
			INNER JOIN 
			tb_u_all_user AS ua
			ON 
			tr.user_id_code = ua.user_id_code 
			INNER JOIN 
			tb_r_based_on_score_by_review AS rb 
			ON 
			tr.review_score_standard_code = rb.review_score_standard_code
			ORDER by
			tr.review_reg_date DESC;
	</select>
	
	<select id="getReviewByGoodsCode" resultMap="ReviewContentsRegResultMap">
	/* 유저페이지 회원 리뷰 상품코드별 조회*/
		SELECT
			 gg.goods_code	
			,gg.goods_name						
			,tr.review_code						
			,tr.review_reg_date                      			
			,tr.review_content						
			,ua.user_id_code						
			,tr.review_star_score				
			,tr.review_recommendations_count		
			,tr.review_decommendations_count	
			,sub.file_code 
			,sub.user_id_code
			,sub.file_orginal_name
			,sub.file_re_name
			,sub.file_main_image
			,sub.file_location
			,sub.file_size
			,sub.file_reg_date
			,sub.file_update_date
			,sub.file_use
			,sub.review_code
		FROM 
			tb_r_review_contents AS tr 
			INNER join
			tb_g_goods AS gg
			on
			tr.goods_code = gg.goods_code
			INNER JOIN 
			tb_u_all_user AS ua
			ON 
			tr.user_id_code = ua.user_id_code 
			INNER JOIN 
			tb_r_based_on_score_by_review AS rb 
			ON 
			tr.review_score_standard_code = rb.review_score_standard_code
			LEFT JOIN
			(SELECT 
				   f.file_code 
			 	  ,f.user_id_code
				  ,f.file_orginal_name
				  ,f.file_re_name
				  ,f.file_main_image
				  ,f.file_location
			  	  ,f.file_size
				  ,f.file_reg_date
				  ,f.file_update_date
				  ,f.file_use
				  ,rf.review_code
				 FROM 
				 	tb_f_file AS f
				 	INNER JOIN 
				 	tb_b_rel_file_with_Review AS rf 
				 	ON 
				 	f.file_code = rf.file_code) AS sub 
				ON 
					sub.review_code = tr.review_code 
			WHERE
				gg.goods_code = #{goodsCode}
			ORDER BY 
			tr.review_code DESC;
	</select>
	
	<select id="getReviewUserList" resultMap="ReviewContentsRegResultMap">
	/* 유저페이지 회원 리뷰 목록*/
		SELECT
			 gg.goods_code	
			,gg.goods_name 						
			,tr.review_code						
			,tr.review_reg_date                      			
			,tr.review_content						
			,ua.user_id_code						
			,tr.review_star_score				
			,tr.review_recommendations_count		
			,tr.review_decommendations_count	
			,sub.file_code 
			,sub.user_id_code
			,sub.file_orginal_name
			,sub.file_re_name
			,sub.file_main_image
			,sub.file_location
			,sub.file_size
			,sub.file_reg_date
			,sub.file_update_date
			,sub.file_use
			,sub.review_code
		FROM 
			tb_r_review_contents AS tr 
			INNER join
			tb_g_goods AS gg
			on
			tr.goods_code = gg.goods_code
			INNER JOIN 
			tb_u_all_user AS ua
			ON 
			tr.user_id_code = ua.user_id_code 
			INNER JOIN 
			tb_r_based_on_score_by_review AS rb 
			ON 
			tr.review_score_standard_code = rb.review_score_standard_code
			LEFT JOIN
			(SELECT 
				   f.file_code 
			 	  ,f.user_id_code
				  ,f.file_orginal_name
				  ,f.file_re_name
				  ,f.file_main_image
				  ,f.file_location
			  	  ,f.file_size
				  ,f.file_reg_date
				  ,f.file_update_date
				  ,f.file_use
				  ,rf.review_code
				 FROM 
				 	tb_f_file AS f
				 	INNER JOIN 
				 	tb_b_rel_file_with_Review AS rf 
				 	ON 
				 	f.file_code = rf.file_code) AS sub 
				ON 
					sub.review_code = tr.review_code 
			ORDER BY 
			tr.review_code DESC;
	</select>
	
	<delete id="removeAdminReview" parameterType="String">
	/* 관리자 페이지 리뷰 삭제 */
		DELETE
		FROM
			tb_r_review_contents 
		WHERE
			review_code = #{reviewCode};
	</delete>
	
	<update id="userSavePoint" parameterType="String">
	/* 리뷰 등록시 유저테이블  총 포인트 적립*/
		UPDATE
			tb_u_all_user AS ua
		SET
			ua.user_retention_Points = ua.user_retention_Points + 100  
		WHERE
			ua.user_id_code = #{userIdCode};
		
	</update>

	<delete id="removeReview" parameterType="String">
	/* 회원 페이지 리뷰 삭제 */
		DELETE 
		FROM 
			tb_r_review_contents 
		WHERE
			review_code = #{reviewCode};
	</delete>
	
	<delete id="removeImageReview" parameterType="String">
	/* 회원 페이지 리뷰 이미지파일 삭제 */
		DELETE 
			 br
		FROM 
			tb_b_rel_file_with_Review AS br
		WHERE
			br.review_code = #{reviewCode};
	</delete>
	
	<update id="modifyReview" parameterType="String">
	/* 회원 페이지 리뷰 수정 */
		UPDATE
			tb_r_review_contents 
		SET 
			review_content = #{reviewContent}
		   ,review_reg_date = CURDATE()	
		   ,review_star_score = #{reviewStarScore}
		WHERE
			review_code = #{reviewCode};
	</update>
	
	<insert id="addReview" parameterType="reviewContentsReg">
	/* 리뷰 등록 */
		INSERT INTO tb_r_review_contents 
			( review_code
			 ,goods_code
			 ,user_id_code
			 ,review_score_standard_code
			 ,review_content
			 ,review_recommendations_count
			 ,review_decommendations_count
			 ,review_reg_date
			 ,review_reg_buyer_exp
	 		 ,review_reg_ip
	 		 ,review_star_score
			 )
			 VALUES (
			(SELECT
				CONCAT(LPAD(MAX(CAST(SUBSTRING(rr.review_code,1) AS UNSIGNED))+1,2,0))
			FROM
				   tb_r_review_contents AS rr)
			 ,#{goodsCode}
			 ,#{userIdCode}
			 ,(SELECT 
					review_score_standard_code
				FROM 
					tb_r_based_on_score_by_review 
				WHERE 
					review_star_score = #{reviewStarScore})
			 ,#{reviewContent}
			 ,0
			 ,0
			 ,CURDATE()
			 ,50
			 ,#{reviewRegIp}
			 ,#{reviewStarScore}
			 );
		 <selectKey resultType="String" keyProperty="reviewCode" order="AFTER">
			/* 상품 등록시 만들어지는 코드 */
			SELECT
				r.review_code
			FROM
				tb_r_review_contents AS r
			ORDER BY r.review_code DESC
			LIMIT 1
		</selectKey>
	</insert>
</mapper>
	
	
	
	